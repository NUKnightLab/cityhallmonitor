#server {
#
#    listen 80;
#    server_name example.org;
#    charset utf-8;
#
#    location /static {
#        alias /www/static;
#    }
#
#    location / {
#        proxy_pass http://web:8000;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }
#
#}

#server {
#  listen 80;
#  server_name smsstudy.knightlab.com;
#  return 301 https://$server_name$request_uri;
#}

server {
  #listen 443 ssl;
  listen 80;

  server_name localhost stg-app2.knightlab.com;

  #ssl_certificate /etc/nginx/ssl/knightlab/knightlab-bundle.crt;
  #ssl_certificate_key /etc/nginx/ssl/knightlab/knightlab-com.key;
  #ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;

  access_log  /var/log/nginx/cityhallmonitor.log;
  error_log /var/log/nginx/cityhallmonitor.err.log info;

  client_max_body_size 5M;

  #root /usr/share/nginx/cityhallmonitor;
  #root /home/apps/sites/cityhallmonitor/mnt/www;
  root /var/www/cityhallmonitor;

  location / {
    try_files $uri @proxy_to_cityhallmonitor;
  }


  #location @proxy_to_cityhallmonitor {
  #    #include proxy_params;
  #    #proxy_pass http://unix:/home/apps/sites/cityhallmonitor/mnt/cityhallmonitor.sock;
  #    proxy_pass http://unix:/usr/src/apps/cityhallmonitor/mnt/cityhallmonitor.sock;
  #    # proxy_set_header Host $host;
  #    # proxy_set_header X-Real-IP $remote_addr;
  #    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #}

  upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response
    # for UNIX domain socket setups
    #server unix:/tmp/gunicorn.sock fail_timeout=0;
    server unix:/usr/src/apps/cityhallmonitor/mnt/cityhallmonitor.sock fail_timeout=0;
    # for a TCP configuration
    # server 192.168.0.7:8000 fail_timeout=0;
  }

    location @proxy_to_cityhallmonitor {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }
}
